name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository }}/1pass-mock
  # 1Password mock
  OP_CONNECT_HOST: http://localhost:8080
  OP_CONNECT_TOKEN: foobar

jobs:
  onepass-mock-build:
    name: 1pass-mock Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    outputs:
      imageid: ${{ steps.build.outputs.imageid }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
      - name: Build
        id: build
        uses: docker/build-push-action@v6
        with:
          context: 1pass-mock
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  chezmoi:
    name: chezmoi
    needs: onepass-mock-build
    strategy:
      matrix:
        runner: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Run 1pass-mock
        run: docker run -d -p 8080:8080 --name 1pass-mock ${{ needs.onepass-mock-build.outputs.imageid }}
      - name: Wait for 1pass-mock to be ready
        run: timeout 60s bash -c 'until curl -s http://localhost:8080/health; do sleep 1; done'
      - name: Setup chezmoi
        run: |
          if [ "${{ matrix.runner }}" = "ubuntu-latest" ]; then
            sudo snap install chezmoi --classic
          elif [ "${{ matrix.runner }}" = "macos-latest" ]; then
            brew install chezmoi
          fi
      - name: Run chezmoi
        run: chezmoi init --apply -S $GITHUB_WORKSPACE --verbose
      - name: chezmoi doctor
        # network 使うと GitHub API rate limit で引っかかるかもなので
        run: chezmoi doctor --no-network -S $GITHUB_WORKSPACE --verbose
      - name: chezmoi verify
        run: chezmoi verify -S $GITHUB_WORKSPACE --verbose
      - name: File Existence Check
        run: |
          if [ "${{ matrix.runner }}" = "ubuntu-latest" ]; then
            sh "$GITHUB_WORKSPACE/scripts/test-linux.sh"
          elif [ "${{ matrix.runner }}" = "macos-latest" ]; then
            sh "$GITHUB_WORKSPACE/scripts/test-macos.sh"
          fi
      - name: Teardown 1pass-mock
        run: |
          docker stop 1pass-mock
          docker rm 1pass-mock

  chezmoi-win:
    name: chezmoi (windows-latest)
    needs: onepass-mock-build
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Run 1pass-mock
        run: docker run -d -p 8080:8080 --name 1pass-mock ${{ needs.onepass-mock-build.outputs.imageid }}
      - name: Wait for 1pass-mock to be ready
        run: |
          $timeout = New-TimeSpan -Seconds 60
          $stopwatch = [System.Diagnostics.Stopwatch]::StartNew()
          while ($stopwatch.Elapsed -lt $timeout) {
            try {
              Invoke-RestMethod -Uri http://localhost:8080/health -Medhod GET -ErrorAction Stop | Out-Null
              $stopwatch.Stop()
              exit 0
            }
            catch {
              Start-Sleep -Seconds 1
            }
          }
          Write-Error "Timeout waiting for 1pass-mock to be ready"
      - name: Update PATH for winget
        run: echo "$Env:LocalAppData\Microsoft\WinGet\Links" >> "$Env:GITHUB_PATH"
      - name: Setup chezmoi
        run: winget install twpayne.chezmoi --accept-source-agreements --accept-package-agreements --disable-interactivity
      - name: Run chezmoi
        run: chezmoi init --apply -S $Env:GITHUB_WORKSPACE --verbose
      - name: chezmoi doctor
        # network 使うと GitHub API rate limit で引っかかるかもなので
        run: chezmoi doctor --no-network -S $Env:GITHUB_WORKSPACE --verbose
      - name: chezmoi verify
        run: chezmoi verify -S $Env:GITHUB_WORKSPACE --verbose
      - name: File Existence Check
        run: pwsh "$Env:GITHUB_WORKSPACE\scripts\test-windows.ps1"
      - name: Teardown 1pass-mock
        run: |
          docker stop 1pass-mock
          docker rm 1pass-mock

  bootstrap:
    name: bootstrap.sh
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Run bootstrap.sh
        run: ./bootstrap.sh
      - run: chezmoi doctor
      - run: chezmoi verify
